from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, InlineKeyboardButton


def create_cancel_button(meeting_id):
    return InlineKeyboardButton("‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏ —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è", callback_data=f'cancel_cancel:{meeting_id}')
def generate_towns_keyboard(info):
    keyboard = []

    for item in info:
        if ' (' in item:
            town, region = item.split(' (')
            region = region.rstrip(')')
            region = f"{region}.–æ–±–ª"
            button_text = f"{town} ({region})"


            button = InlineKeyboardButton(text=button_text, callback_data=f'town_{town}')
            keyboard.append([button])


    back_button = InlineKeyboardButton(text="–ù–∞–∑–∞–¥  ‚Ü©Ô∏èÔ∏è", callback_data="back")
    keyboard.append([back_button])

    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def create_back_button():
    return InlineKeyboardButton("–ù–∞–∑–∞–¥ ‚Ü©Ô∏è", callback_data="back")

#
def create_keyboard_with_back():
    keyboard = InlineKeyboardMarkup()
    keyboard.add(create_back_button())
    return keyboard

button1 = InlineKeyboardButton(text="–°—Ç–≤–æ—Ä–∏—Ç–∏ –∑—É—Å—Ç—Ä—ñ—á", callback_data="create_meeting")
button2 = InlineKeyboardButton(text="–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∞–∫—Ç–∏–≤–Ω—ñ –∑—É—Å—Ç—Ä—ñ—á—ñ", callback_data="view_meetings")
button3 = InlineKeyboardButton(text="–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ñ –∑—É—Å—Ç—Ä—ñ—á—ñ", callback_data="view_end_meetings")
kb_client = InlineKeyboardMarkup(inline_keyboard=[[button1], [button2], [button3]])

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω–ª–∞–π–Ω –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏ –¥–ª—è –≤–∏–±–æ—Ä—É —Ä–æ–∫—É
year_buttons = [InlineKeyboardButton(str(year), callback_data=f"select_year:{year}") for year in range(2023, 2030)]
year_buttons.append(create_back_button())
year_keyboard = InlineKeyboardMarkup(row_width=3).add(*year_buttons)


# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω–ª–∞–π–Ω –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏ –¥–ª—è –≤–∏–±–æ—Ä—É –º—ñ—Å—è—Ü—è
month_buttons = [InlineKeyboardButton(str(i), callback_data=f"select_month:{i}") for i in range(1, 13)]
month_buttons.append(create_back_button())
month_keyboard = InlineKeyboardMarkup().add(*month_buttons)


# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω–ª–∞–π–Ω –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏ –¥–ª—è –≤–∏–±–æ—Ä—É –¥–Ω—è
day_buttons = [InlineKeyboardButton(str(day), callback_data=f"select_day:{day}") for day in range(1, 32)]
day_buttons.append(create_back_button())
day_keyboard = InlineKeyboardMarkup().add(*day_buttons)


# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω–ª–∞–π–Ω –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏ –¥–ª—è –≤–∏–±–æ—Ä—É –≥–æ–¥–∏–Ω–∏
hour_buttons = [InlineKeyboardButton(str(hour), callback_data=f"select_hour:{hour}") for hour in range(0, 24)]
hour_buttons.append(create_back_button())
hour_keyboard = InlineKeyboardMarkup().add(*hour_buttons)

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω–ª–∞–π–Ω –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏ –¥–ª—è –≤–∏–±–æ—Ä—É —Ö–≤–∏–ª–∏–Ω–∏
minute_buttons = [InlineKeyboardButton(str(minute), callback_data=f"select_minute:{minute}") for minute in range(0, 60, 5)]
minute_buttons.append(create_back_button())
minute_keyboard = InlineKeyboardMarkup().add(*minute_buttons)




# –î–æ–¥–∞–≤–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
kb_client_with_back = InlineKeyboardMarkup()
kb_client_with_back.add(create_back_button())

keyboard_with_back = InlineKeyboardMarkup(row_width=1)
keyboard_with_back.add(InlineKeyboardButton("–ù–∞–∑–∞–¥ Ô∏èÔ∏è Ô∏èÔ∏è‚Ü©Ô∏è", callback_data="back"))


keyboard_back = InlineKeyboardMarkup().add(InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='back_to_meeting_name'))
keyboard_back_to_description = InlineKeyboardMarkup().add(InlineKeyboardButton('–ù–∞–∑–∞–¥ –¥–æ –æ–ø–∏—Å—É', callback_data='back_to_description'))


# –°—Ç–≤–æ—Ä—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ "–í—ñ–¥–º—ñ–Ω–∏—Ç–∏"
def create_cancel_cancel_button(meeting_id):
    return InlineKeyboardButton("‚ùå –í—ñ–¥–º—ñ–Ω–∏—Ç–∏", callback_data=f'cancel_cancel:{meeting_id}')

# –°—Ç–≤–æ—Ä—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ "–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –∞–∫—Ç–∏–≤–Ω–∏—Ö –∑—É—Å—Ç—Ä—ñ—á–µ–π"
def create_back_to_meetings_button():
    return InlineKeyboardButton("‚¨ÖÔ∏è –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –∞–∫—Ç–∏–≤–Ω–∏—Ö –∑—É—Å—Ç—Ä—ñ—á–µ–π", callback_data='back_to_meetings')
meeting_keyboard = InlineKeyboardMarkup()
meeting_keyboard.add(InlineKeyboardButton("üñäÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –Ω–∞–∑–≤—É", callback_data="edit_name"))
meeting_keyboard.add(InlineKeyboardButton("üìù –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –æ–ø–∏—Å", callback_data="edit_description"))
meeting_keyboard.add(InlineKeyboardButton("üìÖ –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –¥–∞—Ç—É", callback_data="edit_date"))
meeting_keyboard.add(InlineKeyboardButton("üåç –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –ª–æ–∫–∞—Ü—ñ—é", callback_data="edit_location"))
meeting_keyboard.add(InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="back"))


def generate_streets_keyboard(street_list):
    keyboard = InlineKeyboardMarkup(row_width=1)

    if street_list:
        for street_info in street_list:
            if 'Present' in street_info:
                street_name = street_info['Present']
                button = InlineKeyboardButton(street_name, callback_data=f"street_{street_name}")
                keyboard.add(button)

    return keyboard


def create_confirmation_keyboard():
    keyboard = InlineKeyboardMarkup()
    keyboard.row(
        InlineKeyboardButton('–¢–∞–∫', callback_data='confirm_cancel'),
        InlineKeyboardButton('–ù—ñ', callback_data='deny_cancel')
    )
    return keyboard


